# FROM <image>:<tag>
# <image> — имя базового образа, например, python.
# <tag> — необязательный параметр, указывает конкретную версию образа.

# Создать образ на основе базового слоя,
# который содержит файлы ОС и интерпретатор Python 3.9.
FROM python:3.9

# Это сходно с выполнением команды cd в терминале
# Переходим в образе в директорию /app: в ней будем хранить код проекта.
# Если директории с указанным именем нет, она будет создана. 
# Название директории может быть любым.
WORKDIR /app
# Дальнейшие инструкции будут выполняться в директории /app

RUN pip install gunicorn==20.1.0 

# Скопировать с локального компьютера файл зависимостей
# в текущую директорию (текущая директория — это /app).
# Путь на локальном компьютере отсчитывается от директории,
# где хранится докерфайл. 
# COPY <локальный_файл_или_директория> <путь_внутри_образа>
COPY requirements.txt .

# Выполнить в текущей директории команду терминала
# для установки зависимостей.
RUN pip install -r requirements.txt --no-cache-dir

# Скопировать всё необходимое содержимое 
# той директории локального компьютера, где сохранён Dockerfile,
# в текущую рабочую директорию образа — /app.
COPY . .

# первым элементом указывается исполняемый файл;
# следом указываются параметры для запуска исполняемого файла
# При старте контейнера запустить сервер разработки.
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "backend.wsgi"] 